/* Generated by Together */

package com.pb.despair.model;
import java.io.IOException;
import java.io.Writer;


public class AmountInZone {

    protected AbstractTAZ myTaz;
    protected ProductionActivity myProductionActivity;

    private double locationSpecificUtilityInclTaxes;
    double quantity = 0;
    private double allocationSizeTerm;

    public AmountInZone(ProductionActivity p, AbstractTAZ t) {
      myProductionActivity = p;
      myTaz = t;
    }

    public double getLocationSpecificUtilityInclTaxes() { return locationSpecificUtilityInclTaxes; }

    public void setLocationSpecificUtilityInclTaxes(double locationSpecificUtilityInclTaxes) {
        this.locationSpecificUtilityInclTaxes = locationSpecificUtilityInclTaxes;
    }

    public double getQuantity(){ return quantity; }

    public void setQuantity(double newQuantity) {
        quantity = newQuantity;
    }

    public AbstractTAZ getMyTaz(){
            return myTaz;
        }

    public boolean equals(Object o) {
       AmountInZone other = (AmountInZone) o;
       if (other== null)
       {
         return false;
       }
       if (other.myTaz.equals(myTaz) && other.myProductionActivity.equals(myProductionActivity))
       { 
         return true;
       }
       return false;
     }

    public int hashCode() {return myProductionActivity.hashCode() ^ myTaz.hashCode();};

    public double getAllocationSizeTerm(){ return allocationSizeTerm; }

    public void setAllocationSizeTerm(double allocationSizeTerm){ this.allocationSizeTerm = allocationSizeTerm; }


    
    /**
     * Method updateLocationUtilityTerms.
     * @param w
     */
    public void updateLocationUtilityTerms(Writer w) {
    	// default behaviour is to terminate the line
        try {
            w.write("\n");
        } catch (IOException e) {
            System.out.println("error in location utility terms");
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }

}
